# Network policies for WriteMagic - Zero Trust Network Security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: writemagic-backend-policy
  namespace: writemagic-ENVIRONMENT
  labels:
    app.kubernetes.io/name: writemagic
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: writemagic
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: writemagic
      app.kubernetes.io/component: backend
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow traffic from ingress controller
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8080
  # Allow traffic from other backend pods (for clustering)
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: writemagic
          app.kubernetes.io/component: backend
    ports:
    - protocol: TCP
      port: 8080
  # Allow traffic from monitoring
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 9090  # Metrics endpoint
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  # Allow database access
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: postgres
    ports:
    - protocol: TCP
      port: 5432
  # Allow Redis access
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: redis
    ports:
    - protocol: TCP
      port: 6379
  # Allow AI provider APIs (external)
  - to: []
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80
  # Allow Kubernetes API access
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: TCP
      port: 443
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: writemagic-database-policy
  namespace: writemagic-ENVIRONMENT
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: writemagic
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: postgres
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Only allow traffic from backend pods
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: writemagic
          app.kubernetes.io/component: backend
    ports:
    - protocol: TCP
      port: 5432
  # Allow monitoring
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 9187  # postgres_exporter port
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: writemagic-redis-policy
  namespace: writemagic-ENVIRONMENT
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: cache
    app.kubernetes.io/part-of: writemagic
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: redis
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Only allow traffic from backend pods
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: writemagic
          app.kubernetes.io/component: backend
    ports:
    - protocol: TCP
      port: 6379
  # Allow monitoring
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 9121  # redis_exporter port
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: writemagic-monitoring-policy
  namespace: writemagic-ENVIRONMENT
  labels:
    app.kubernetes.io/name: writemagic
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/part-of: writemagic
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: monitoring
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow traffic from ingress controller
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 3000  # Grafana
    - protocol: TCP
      port: 9090  # Prometheus
  # Allow inter-monitoring communication
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/component: monitoring
    ports:
    - protocol: TCP
      port: 3000
    - protocol: TCP
      port: 9090
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  # Allow scraping all pods in namespace
  - to:
    - podSelector: {}
    ports:
    - protocol: TCP
      port: 9090
    - protocol: TCP
      port: 9187
    - protocol: TCP
      port: 9121
  # Allow external alerting
  - to: []
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80
---
# Default deny all policy for the namespace
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: writemagic-default-deny
  namespace: writemagic-ENVIRONMENT
  labels:
    app.kubernetes.io/name: writemagic
    app.kubernetes.io/component: security
    app.kubernetes.io/part-of: writemagic
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  # This policy denies all traffic by default
  # Specific policies above will allow necessary traffic
---
# Allow system pods to communicate
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: writemagic-system-policy
  namespace: writemagic-ENVIRONMENT
  labels:
    app.kubernetes.io/name: writemagic
    app.kubernetes.io/component: system
    app.kubernetes.io/part-of: writemagic
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: system
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow system communication
  - from:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  egress:
  # Allow DNS and system communication
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system