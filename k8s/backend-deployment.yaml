apiVersion: apps/v1
kind: Deployment
metadata:
  name: writemagic-backend
  namespace: writemagic-ENVIRONMENT
  labels:
    app.kubernetes.io/name: writemagic-backend
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: writemagic
    app.kubernetes.io/version: IMAGE_TAG
    environment: ENVIRONMENT
  annotations:
    deployment.kubernetes.io/revision: "1"
    deployment.writemagic.com/image-tag: IMAGE_TAG
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: writemagic-backend
      app.kubernetes.io/component: backend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: writemagic-backend
        app.kubernetes.io/component: backend
        app.kubernetes.io/part-of: writemagic
        app.kubernetes.io/version: IMAGE_TAG
        environment: ENVIRONMENT
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: writemagic-backend
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: writemagic-backend
        image: writemagic/writemagic:IMAGE_TAG
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 8081
          name: health
          protocol: TCP
        env:
        - name: RUST_LOG
          value: "info,writemagic=debug"
        - name: RUST_BACKTRACE
          value: "1"
        - name: ENVIRONMENT
          value: "ENVIRONMENT"
        - name: PORT
          value: "8080"
        - name: HEALTH_PORT
          value: "8081"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: writemagic-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: writemagic-secrets
              key: redis-url
        - name: CLAUDE_API_KEY
          valueFrom:
            secretKeyRef:
              name: writemagic-ai-secrets
              key: claude-api-key
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: writemagic-ai-secrets
              key: openai-api-key
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              name: writemagic-config
              key: aws-region
        - name: S3_BUCKET
          valueFrom:
            configMapKeyRef:
              name: writemagic-config
              key: s3-bucket
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
        livenessProbe:
          httpGet:
            path: /health
            port: health
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: health
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: health
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 30
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: var-run
          mountPath: /var/run
        - name: cache
          mountPath: /app/cache
      volumes:
      - name: tmp
        emptyDir: {}
      - name: var-run
        emptyDir: {}
      - name: cache
        emptyDir:
          sizeLimit: 1Gi
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - writemagic-backend
              topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: writemagic-backend
  namespace: writemagic-ENVIRONMENT
  labels:
    app.kubernetes.io/name: writemagic-backend
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: writemagic
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT_ID:role/writemagic-ENVIRONMENT-backend-role
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: writemagic-backend-pdb
  namespace: writemagic-ENVIRONMENT
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: writemagic-backend
      app.kubernetes.io/component: backend