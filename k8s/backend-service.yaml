apiVersion: v1
kind: Service
metadata:
  name: writemagic-backend
  namespace: writemagic-ENVIRONMENT
  labels:
    app.kubernetes.io/name: writemagic-backend
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: writemagic
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-subnets: PUBLIC_SUBNET_IDS
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/metrics"
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  - name: https
    port: 443
    targetPort: http
    protocol: TCP
  selector:
    app.kubernetes.io/name: writemagic-backend
    app.kubernetes.io/component: backend
  sessionAffinity: None
---
apiVersion: v1
kind: Service
metadata:
  name: writemagic-backend-internal
  namespace: writemagic-ENVIRONMENT
  labels:
    app.kubernetes.io/name: writemagic-backend
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: writemagic
    service-type: internal
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8080
    targetPort: http
    protocol: TCP
  - name: health
    port: 8081
    targetPort: health
    protocol: TCP
  selector:
    app.kubernetes.io/name: writemagic-backend
    app.kubernetes.io/component: backend
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: writemagic-backend-ingress
  namespace: writemagic-ENVIRONMENT
  labels:
    app.kubernetes.io/name: writemagic-backend
    app.kubernetes.io/component: ingress
    app.kubernetes.io/part-of: writemagic
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/certificate-arn: CERTIFICATE_ARN
    alb.ingress.kubernetes.io/load-balancer-attributes: |
      idle_timeout.timeout_seconds=60,
      routing.http2.enabled=true,
      access_logs.s3.enabled=true,
      access_logs.s3.bucket=writemagic-ENVIRONMENT-alb-logs
    alb.ingress.kubernetes.io/healthcheck-path: /health
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '3'
spec:
  rules:
  - host: api-ENVIRONMENT.writemagic.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: writemagic-backend-internal
            port:
              number: 8080
  - host: api.writemagic.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: writemagic-backend-internal
            port:
              number: 8080
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: writemagic-backend-netpol
  namespace: writemagic-ENVIRONMENT
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: writemagic-backend
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    - namespaceSelector:
        matchLabels:
          name: monitoring
    - podSelector:
        matchLabels:
          app.kubernetes.io/component: ingress-controller
    ports:
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 8081
  egress:
  - to: []
    ports:
    - protocol: TCP
      port: 443  # HTTPS
    - protocol: TCP
      port: 80   # HTTP
    - protocol: TCP
      port: 5432 # PostgreSQL
    - protocol: TCP
      port: 6379 # Redis
  - to: []
    ports:
    - protocol: UDP
      port: 53   # DNS