[workspace]
resolver = "2"
members = [
    "core/shared",
    "core/writing",
    "core/ai",
    "core/project",
    "core/version_control",
    "core/agent",
    "ffi/android",
    "ffi/ios",
    "web",
    "core/wasm",
    "migration",
    "tests",
]

[workspace.package]
version = "0.1.0"
edition = "2021"
rust-version = "1.70"
authors = ["WriteMagic Team"]
license = "MIT OR Apache-2.0"
repository = "https://github.com/writemagic/writemagic"

[workspace.dependencies]
# Async runtime
tokio = { version = "1.44", default-features = false, features = ["rt-multi-thread", "macros", "time", "sync", "fs", "process", "signal"] }
tokio-util = { version = "0.7", features = ["full"] }
async-trait = "0.1"

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_yaml = "0.9"

# Error handling
anyhow = "1.0"
thiserror = "2.0"

# Database
sqlx = { version = "0.7", features = ["runtime-tokio-rustls", "sqlite", "chrono", "uuid", "macros"], default-features = false }
sea-orm = { version = "0.12", features = ["sqlx-sqlite", "runtime-tokio-rustls", "macros", "with-chrono", "with-uuid"] }
sea-orm-migration = "0.12"

# Git integration
git2 = "0.18"

# HTTP client for AI providers  
reqwest = { version = "0.11", features = ["json", "rustls-tls"], default-features = false }

# Web Framework (Axum ecosystem)
axum = { version = "0.7", features = ["macros", "ws", "multipart"] }
axum-extra = { version = "0.9", features = ["typed-header", "cookie", "form"] }
tower = { version = "0.4", features = ["full"] }
tower-http = { version = "0.5", features = ["fs", "cors", "compression-full", "trace", "timeout", "limit", "request-id", "sensitive-headers"] }
hyper = { version = "1.1", features = ["full"] }
hyper-util = "0.1"

# UUID and time
uuid = { version = "1.0", features = ["v4", "serde"] }
chrono = { version = "0.4", features = ["serde"] }

# Logging and observability
log = "0.4"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }
tracing-opentelemetry = "0.25"
opentelemetry = "0.25"
opentelemetry-otlp = "0.25"

# Performance collections
bytes = "1.9"
smallvec = "1.13"
arrayvec = "0.7"

# Memory management
once_cell = "1.20"
pin-project = "1.1"

# Concurrency
crossbeam = "0.8"
rayon = "1.10"

# Benchmarking and testing
criterion = { version = "0.5", features = ["html_reports"] }
proptest = "1.5"
testcontainers = "0.15"
testcontainers-modules = { version = "0.3", features = ["postgres"] }
axum-test = "14.0"
tempfile = "=3.8.1"
fastrand = "2.0"
toml = "0.8"

# Advanced performance
memmap2 = "0.9"
num_cpus = "1.16"
atty = "0.2"

# Optional allocators  
tikv-jemallocator = "0.5"
tikv-jemalloc-ctl = "0.5"

# Observability
tracing-appender = "0.2"

# Cross-platform FFI
cxx = "1.0"

# Android FFI
jni = "0.21"
android_logger = "0.13"

# Validation
validator = { version = "0.16", features = ["derive"] }
garde = { version = "0.20", features = ["derive", "email", "url"] }

# Configuration
config = "0.13"

# Text processing
regex = "1.0"
unicode-segmentation = "1.0"
url = "2.5"

# Rate limiting and caching
dashmap = "5.5"
futures = "0.3"

# Crypto
aes-gcm = "0.10"
sha2 = "0.10"
argon2 = "0.5"
jsonwebtoken = "9.3"
ring = "0.17"

# iOS specific
libc = "0.2"

# WASM specific
wasm-bindgen = "0.2"
wasm-bindgen-futures = "0.4"
serde-wasm-bindgen = "0.6"
js-sys = "0.3"
web-sys = { version = "0.3", features = [
    "console",
    "Document",
    "Element",
    "HtmlElement",
    "Window",
    "Storage",
    "Location",
    "History",
    "Response",
    "Request",
    "Headers",
    "FormData",
    "Blob",
    "File",
    "FileReader",
] }
console_error_panic_hook = "0.1"
getrandom = { version = "=0.2.16", features = ["js"] }

# Force specific dependency versions to ensure getrandom compatibility
ahash = { version = "=0.8.7" }  # Last version that uses getrandom 0.2

# Testing utilities
unicode-normalization = "0.1"
base64 = "0.22"


# Use workspace.lints for consistent linting across all crates
[workspace.lints.rust]
unsafe_code = "warn"
missing_docs = "warn"
unused_imports = "warn"
unused_variables = "warn"
dead_code = "warn"

[workspace.lints.clippy]
all = { level = "warn", priority = -1 }
pedantic = { level = "warn", priority = -1 }
nursery = { level = "warn", priority = -1 }
# Disable annoying lints
module_name_repetitions = "allow"
must_use_candidate = "allow"
too_many_lines = "allow"
missing_errors_doc = "allow"


[profile.release]
lto = true
codegen-units = 1
panic = "abort"
strip = true

[profile.dev]
debug = true
opt-level = 0

[profile.release-dbg]
inherits = "release"
strip = false            # Keep symbols for profiling
debug = true            # Include debug info

[profile.release-min]
inherits = "release"
opt-level = "z"         # Optimize for size
lto = "fat"             # Link-time optimization
codegen-units = 1       # Single codegen unit
panic = "abort"         # No unwinding
strip = true            # Strip symbols

# WASM-specific profiles
[profile.wasm-release]
inherits = "release"
opt-level = "s"         # Optimize for size (WASM)
lto = true              # Link-time optimization
panic = "abort"         # No unwinding for WASM
overflow-checks = false # Disable overflow checks for performance

[profile.wasm-dev]
inherits = "dev"
panic = "abort"         # No unwinding for WASM
overflow-checks = true  # Keep overflow checks in dev


# Cross-compilation targets
[workspace.metadata.cross]
[workspace.metadata.cross.target.aarch64-linux-android]
dockerfile = "docker/Dockerfile.android"

[workspace.metadata.cross.target.armv7-linux-androideabi]
dockerfile = "docker/Dockerfile.android"

[workspace.metadata.cross.target.i686-linux-android]
dockerfile = "docker/Dockerfile.android"

[workspace.metadata.cross.target.x86_64-linux-android]
dockerfile = "docker/Dockerfile.android"

[workspace.metadata.cross.target.aarch64-apple-ios]
dockerfile = "docker/Dockerfile.ios"

[workspace.metadata.cross.target.x86_64-apple-ios]
dockerfile = "docker/Dockerfile.ios"

[workspace.metadata.cross.target.wasm32-unknown-unknown]
dockerfile = "docker/Dockerfile.wasm"